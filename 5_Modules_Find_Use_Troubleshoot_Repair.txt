# Új gyakorlat: Exercise6
1. Készítsünk másolatot:
cp -r exercise5/ exercise6
cd exercise6

2. Nevezzük át a playbookot:
mv web-db.yaml web.yaml

# Playbook: web.yaml – fájlmásolással együtt
nano web.yaml

---
- name: Webserver setup
  hosts: webservers
  become: yes
  tasks:
    - name: Install httpd
      ansible.builtin.yum:
        name: httpd
        state: present

    - name: Start service
      ansible.builtin.service:
        name: httpd
        state: started
        enabled: yes

    - name: Copy index file
      ansible.builtin.copy:
        src: files/index.html
        dest: /var/www/html/index.html
        backup: yes

Magyarázat:
A copy modul segítségével másolunk fájlt a célgépre.
backup: yes → ha létező fájlt írunk felül, automatikusan mentést készít.

# Fájl létrehozása a másoláshoz
mkdir files
nano files/index.html

<html>
<h1>Learning modules in Ansible</h1>
</html>

# Playbook futtatása
ansible-playbook -i inventory web.yaml

1. Ellenőrzés
Nézzük meg az IP-címet:
cat inventory

2. SSH-val belépünk az egyik web szerverre:
ssh -i clientkey.pem ec2-user@172.31.83.148
sudo -i
cd /var/www/html
ls  # Meg kell jelenjen: index.html

# Új gyakorlat: Exercise7 – adatbázis-szerver Playbook
cp -r exercise5/ exercise7
cd exercise7
mv web-db.yaml db.yaml

# Alap Playbook – db.yaml

- name: DBserver setup
  hosts: dbservers
  become: yes
  tasks:
    - name: Install mariadb-server
      ansible.builtin.yum:
        name: mariadb-server
        state: present

    - name: Start mariadb service
      ansible.builtin.service:
        name: mariadb
        state: started
        enabled: yes

    - name: Create a new database with name 'accounts'
      mysql_db:
        name: accounts
        state: present

Ez hibát fog adni, mert hiányzik a PyMySQL és a mysql_db modulhoz szükséges Python csomag.

# Hibaelhárítás – csatlakozás a DB szerverhez
ssh -i clientkey.pem ec2-user@172.31.91.210
sudo -
yum search python | grep -i mysql  # megkeressük a PyMySQL-t
exit

# PyMySQL telepítése
    - name: Install PyMySQL
      ansible.builtin.yum:
        name: python3-PyMySQL
        state: present

# login_unix_socket megadása
A mysql_db modul alapértelmezetten TCP-n próbál csatlakozni, de MariaDB lokális socketet használ.

Hozzáadjuk:
        login_unix_socket: /var/lib/mysql/mysql.sock

# Javított db.yaml Playbook – mysql modul használatával
- name: DBserver setup
  hosts: dbservers
  become: yes
  tasks:
    - name: Install mariadb-server
      ansible.builtin.yum:
        name: mariadb-server
        state: present

    - name: Install PyMySQL
      ansible.builtin.yum:
        name: python3-PyMySQL
        state: present

    - name: Start mariadb service
      ansible.builtin.service:
        name: mariadb
        state: started
        enabled: yes

    - name: Create a new database with name 'accounts'
      mysql_db:
        name: accounts
        state: present
        login_unix_socket: /var/lib/mysql/mysql.sock

# Modul bővítés – community.mysql gyűjtemény telepítése
Ansible Galaxy segítségével letöltjük:
ansible-galaxy collection install community.mysql --force

# Frissített Playbook community.mysql modulokkal
- name: DBserver setup
  hosts: dbservers
  become: yes
  tasks:
    - name: Install mariadb-server
      ansible.builtin.yum:
        name: mariadb-server
        state: present

    - name: Install PyMySQL
      ansible.builtin.yum:
        name: python3-PyMySQL
        state: present

    - name: Start mariadb service
      ansible.builtin.service:
        name: mariadb
        state: started
        enabled: yes

    - name: Create a new database with name 'accounts'
      community.mysql.mysql_db:
        name: accounts
        state: present
        login_unix_socket: /var/lib/mysql/mysql.sock

    - name: Create database user with name 'vprofile'
      community.mysql.mysql_user:
        name: vprofile
        password: 'Adm1nAdm1n?'
        priv: '*.*:ALL'
        state: present
        login_unix_socket: /var/lib/mysql/mysql.sock
